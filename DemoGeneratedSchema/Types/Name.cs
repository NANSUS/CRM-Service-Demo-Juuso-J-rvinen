//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace DemoNamespace;


public static class NameExtensions
{
    [GraphQLMember("avatars")]
    public static List<Avatar> Avatars(this Name  name, [GraphQLArgument("first", "Int!")] int first)
    {
        return name.GetMethodValue<List<Avatar>>("avatars", first);
    }

    [GraphQLMember("known_for")]
    public static List<Title> Known_for(this Name  name, [GraphQLArgument("first", "Int!")] int first)
    {
        return name.GetMethodValue<List<Title>>("known_for", first);
    }

}

/// <summary>
/// Name object types identify name entities (people).
/// </summary>
public partial class Name : GraphQLTypeBase
{
    /// <summary>
    /// The unique IMDb ID for the name. Each IMDb ID appears exactly once.
    /// </summary>
    [GraphQLMember("id")]
    [JsonPropertyName("id")]
    public string Id { get; set; }

    /// <summary>
    /// The primary name by which this person is known, usually the one by which they are most often credited.
    /// </summary>
    [GraphQLMember("display_name")]
    [JsonPropertyName("display_name")]
    public string Display_name { get; set; }

    [GraphQLMember("alternate_names")]
    [JsonPropertyName("alternate_names")]
    public List<string> Alternate_names { get; set; }

    /// <summary>
    /// The year in which this person was born.
    /// </summary>
    [GraphQLMember("birth_year")]
    [JsonPropertyName("birth_year")]
    public int? Birth_year { get; set; }

    /// <summary>
    /// The place where this person was born.
    /// </summary>
    [GraphQLMember("birth_location")]
    [JsonPropertyName("birth_location")]
    public string Birth_location { get; set; }

    /// <summary>
    /// The year in which this person died.
    /// </summary>
    [GraphQLMember("death_year")]
    [JsonPropertyName("death_year")]
    public int? Death_year { get; set; }

    /// <summary>
    /// The place where this person died.
    /// </summary>
    [GraphQLMember("death_location")]
    [JsonPropertyName("death_location")]
    public string Death_location { get; set; }

    /// <summary>
    /// The cause of death.
    /// </summary>
    [GraphQLMember("dead_reason")]
    [JsonPropertyName("dead_reason")]
    public string Dead_reason { get; set; }

    private LazyProperty<List<Avatar>> _avatars = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public List<Avatar> Avatars => _avatars.Value(() => GetFirstMethodValue<List<Avatar>>("avatars"));

    private LazyProperty<List<Title>> _known_for = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public List<Title> Known_for => _known_for.Value(() => GetFirstMethodValue<List<Title>>("known_for"));

}
