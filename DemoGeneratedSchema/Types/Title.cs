//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace DemoNamespace;


public static class TitleExtensions
{
    [GraphQLMember("certificates")]
    public static List<Certificate> Certificates(this Title  title, [GraphQLArgument("first", "Int!")] int first)
    {
        return title.GetMethodValue<List<Certificate>>("certificates", first);
    }

    [GraphQLMember("posters")]
    public static List<Poster> Posters(this Title  title, [GraphQLArgument("first", "Int!")] int first)
    {
        return title.GetMethodValue<List<Poster>>("posters", first);
    }

    [GraphQLMember("credits")]
    public static List<Credit> Credits(this Title  title, [GraphQLArgument("first", "Int!")] int first, [GraphQLArgument("categories", "[String!]")] List<string> categories = null)
    {
        return title.GetMethodValue<List<Credit>>("credits", first, categories);
    }

}

/// <summary>
/// Title object types identify title entities (movies, series, episodes and video games).
/// </summary>
public partial class Title : GraphQLTypeBase
{
    /// <summary>
    /// The unique IMDb ID for the title. Each IMDb ID appears exactly once.
    /// </summary>
    [GraphQLMember("id")]
    [JsonPropertyName("id")]
    public string Id { get; set; }

    /// <summary>
    /// The type of this title, e.g. 'movie' or 'tvSeries'.
    /// </summary>
    [GraphQLMember("type")]
    [JsonPropertyName("type")]
    public string Type { get; set; }

    /// <summary>
    /// Whether or not this title contains adult content.
    /// </summary>
    [GraphQLMember("is_adult")]
    [JsonPropertyName("is_adult")]
    public bool Is_adult { get; set; }

    /// <summary>
    /// The primary title text of the title.
    /// </summary>
    [GraphQLMember("primary_title")]
    [JsonPropertyName("primary_title")]
    public string Primary_title { get; set; }

    /// <summary>
    /// The original title text of the title, normally what the title is known as in its original country of release.
    /// </summary>
    [GraphQLMember("original_title")]
    [JsonPropertyName("original_title")]
    public string Original_title { get; set; }

    /// <summary>
    /// The year of the earliest release of this title globally.
    /// </summary>
    [GraphQLMember("start_year")]
    [JsonPropertyName("start_year")]
    public int? Start_year { get; set; }

    /// <summary>
    /// The year when the last episode/series finale of the show has aired.
/// When a show is still running the end year will be omitted.
    /// </summary>
    [GraphQLMember("end_year")]
    [JsonPropertyName("end_year")]
    public int? End_year { get; set; }

    /// <summary>
    /// The running time of this title in minutes.
    /// </summary>
    [GraphQLMember("runtime_minutes")]
    [JsonPropertyName("runtime_minutes")]
    public int? Runtime_minutes { get; set; }

    /// <summary>
    /// A plot description.
    /// </summary>
    [GraphQLMember("plot")]
    [JsonPropertyName("plot")]
    public string Plot { get; set; }

    /// <summary>
    /// The IMDb Rating.
    /// </summary>
    [GraphQLMember("rating")]
    [JsonPropertyName("rating")]
    public Rating Rating { get; set; }

    private LazyProperty<List<Certificate>> _certificates = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public List<Certificate> Certificates => _certificates.Value(() => GetFirstMethodValue<List<Certificate>>("certificates"));

    /// <summary>
    /// Aggregated reviews score from Metacritic.com
    /// </summary>
    [GraphQLMember("critic_review")]
    [JsonPropertyName("critic_review")]
    public CriticReview Critic_review { get; set; }

    /// <summary>
    /// A list of genres to which this title belongs.
    /// </summary>
    [GraphQLMember("genres")]
    [JsonPropertyName("genres")]
    public List<string> Genres { get; set; }

    /// <summary>
    /// A list of the languages spoken in this title.
    /// </summary>
    [GraphQLMember("spoken_languages")]
    [JsonPropertyName("spoken_languages")]
    public List<Language> Spoken_languages { get; set; }

    /// <summary>
    /// A list of origin countries in which the production companies for the title are based.
    /// </summary>
    [GraphQLMember("origin_countries")]
    [JsonPropertyName("origin_countries")]
    public List<Country> Origin_countries { get; set; }

    private LazyProperty<List<Poster>> _posters = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public List<Poster> Posters => _posters.Value(() => GetFirstMethodValue<List<Poster>>("posters"));

    private LazyProperty<List<Credit>> _credits = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public List<Credit> Credits => _credits.Value(() => GetFirstMethodValue<List<Credit>>("credits"));

}
